########################################################
#
#   Docker on Debian
#
########################################################

https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-debian-9
https://linuxize.com/post/how-to-install-and-use-docker-on-debian-10/
https://www.itzgeek.com/how-tos/linux/debian/how-to-install-docker-on-debian-9.html
https://goneuland.de/debian-10-buster-docker-installieren/
https://www.codeflow.site/de/article/how-to-install-and-use-docker-on-debian-10
https://docs.docker.com/engine/install/debian/

https://hub.docker.com/
https://docs.docker.com/get-started/overview/
https://docs.docker.com/engine/reference/commandline/pull/
https://docs.docker.com/engine/reference/commandline/image_pull/
https://docs.docker.com/develop/develop-images/dockerfile_best-practices/
https://github.com/rocker-org/rocker/wiki/How-to-save-data
https://medium.com/@sh.tsang/docker-tutorial-4-exporting-container-and-saving-image-c3a7d792cfb6
https://tuhrig.de/difference-between-save-and-export-in-docker/
https://www.techrepublic.com/article/how-to-commit-changes-to-a-docker-image/
https://linuxconfig.org/docker-container-backup-and-recovery



sudo apt update
sudo apt install apt-transport-https ca-certificates curl gnupg2 software-properties-common

curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
sudo apt update
apt-cache policy docker-ce
sudo apt install docker-ce
sudo systemctl status docker

docker pull ubuntu
docker pull alpine
docker pull debian
docker pull clearlinux

docker ps -a
docker images
sudo docker images --tree
docker ps
docker run -i -t ubuntu /bin/bash -d /home/test

#---------------------------
# Management
#---------------------------
docker ps
docker commit 4a6dc5142337 demos/ubuntucpp
docker commit -p  4a6dc5142337  demos/ubuntucpp2
sha256:c40d63515c2e4d149cf2621dc1fed992e48b1caa6da19f86ff9b4597f7a556a0
#docker push demos/ubuntucpp
docker run -i -t demos/ubuntucpp /bin/bash
sudo docker export c40d63515c2e > /home/export.tar
sudo docker rm <CONTAINER ID>
sudo docker rmi <IMAGE ID>

# import the exported tar ball:
cat /home/export.tar | sudo docker import - ubuntucpp-export:latest

# check the available images
sudo docker images




#---------------------------
# Management
#---------------------------
sudo docker run -itd --name ubuntu ubuntu:1804 /bin/bash
sudo docker exec -it ubuntu bash
sudo docker save ubuntu > ubuntu_save.tar
sudo docker export ubuntu > ubuntu_export.tar
sudo docker stop ubuntu
sudo docker rm ubuntu
sudo docker rmi ubuntu:18.04
sudo docker load < ubuntu_save.tar
cat ubuntu_export.tar | sudo docker import - ubuntu:18.04
sudo docker run -itd --name ubuntu ubuntu:18.04 /bin/bash
sudo docker exec -it ubuntu bash


---------------------------
hub
---------------------------

https://hub.docker.com/_/ubuntu
https://hub.docker.com/_/debian

https://hub.docker.com/_/php
https://hub.docker.com/_/postgres
https://hub.docker.com/_/nginx
https://hub.docker.com/_/mysql
https://hub.docker.com/_/mariadb


docker run -it --rm --name my-running-script -v "$PWD":/usr/src/myapp -w /usr/src/myapp php:7.4-cli php your-script.php
docker run -d -p 80:80 --name my-apache-php-app -v "$PWD":/var/www/html php:7.2-apache

docker run -d --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -e PGDATA=/var/lib/postgresql/data/pgdata -v /custom/mount:/var/lib/postgresql/data postgres

docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag
docker run -it --network some-network --rm mysql mysql -hsome-mysql -uexample-user -p
docker run -it --rm mysql mysql -hsome.mysql.host -usome-mysql-user -p
docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

docker run -it --network some-network --rm mariadb mysql -hsome-mariadb -uexample-user -p


https://docs.docker.com/docker-hub/official_images/
https://docs.docker.com/engine/install/

------------------------------------
tensorflow in docker
------------------------------------
https://hub.docker.com/r/tensorflow/tensorflow/
https://www.tensorflow.org/install/docker


https://www.tensorflow.org/install
docker run -it --rm tensorflow/tensorflow bash
docker run -it --rm -v $(realpath ~/notebooks):/tf/notebooks -p 8888:8888 tensorflow/tensorflow:latest-jupyter


https://hub.docker.com/r/pytorch/pytorch
https://hub.docker.com/r/pytorch/pytorch-binary-docker-image-ubuntu16.04