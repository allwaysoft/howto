

######################################################################################
#
#	Ubuntu 2020 update - journald has replaced syslog, in quite a big portion of systems, including Ubuntu.
#
######################################################################################

https://askubuntu.com/questions/26237/difference-between-var-log-messages-var-log-syslog-and-var-log-kern-log
https://unix.stackexchange.com/questions/35851/whats-the-difference-of-dmesg-output-and-var-log-messages
https://www.thegeekstuff.com/2011/08/linux-var-log-files/

This is relevant because you won't be finding /var/log/messages that often anymore. journald doesn't write plaintext logs — it uses its own, compressed and partially authenticated format.

journalctl -o json | grep -i Failed
journalctl | grep -i Failed
journalctl -o json-pretty
dmesg


[base logs]
/var/log/messages			# global system
/var/log/dmesg				# kernel ring buffer information
/var/log/auth.log			# system authorization information
/var/log/boot.log 			# logged information  when the system boots
/var/log/daemon.log			# logged various background daemons
/var/log/dpkg.log			# logged package installed or removed by  dpkg -i
/var/log/kern.log			# information logged by the kernel
/var/log/lastlog			# recent login informatio
/var/log/maillog			# mail server log
/var/log/mail.log			# mail server log
/var/log/user.log			# user level logs
/var/log/Xorg.x.log			# Log messages from the X
/var/log/alternatives.log	# update-alternatives
/var/log/btmp				# information about failed login attemp ( last -f /var/log/btmp | more )
/var/log/cups				# printing related log messages
/var/log/anaconda.log 		#
/var/log/yum.log			# yum logs
/var/log/cron				# cron job info
/var/log/secure 			# authentication and authorization privileges.
/var/log/wtmp				# login records.
/var/log/utmp				# login records.
/var/log/faillog 			# failed login attemps


[extra]
/var/log/httpd/				# apache web server access
/var/log/apache2			# apache web server access
/var/log/lighttpd/			# light HTTPD access
/var/log/conman/ 			# ConMan client
/var/log/mail/				# mail
/var/log/prelink/ 			# prelink program modifies shared libs
/var/log/audit/				# Linux audit daemon (auditd).
/var/log/setroubleshoot/	# SELinux uses setroubleshootd
/var/log/samba/				# information stored by samba
/var/log/sa/ 				# the sysstat package.
/var/log/sssd/				# security services daemon access to remote directories

check logs with vim / tail / head / less / grep

#######################################################################
#
#   systemctl
#
#######################################################################

dmesg -d
systemctl list-units --failed
systemctl list-unit-files

systemd-analyze blame
systemd-analyze critical-chain
systemd-analyze time

sudo apt remove --purge snapd

dpkg -l | grep nvidia
ps aux | grep -i nvidia
sudo apt install nvidia-driver-390
nvidia-driver-390  nvidia-driver-410  nvidia-driver-418
nvidia-settings

sudo parted --list
sudo lshw -short
sudo hdparm -I /dev/sda


systemd-resolve --status
netstat -l -p -a -n


# setting LLMNR=no in /etc/systemd/resolved.conf
systemctl restart systemd-resolved.service


######################################################################################



journalctl -p 3 -xb
journalctl -b0 -p4
dmesg | grep -i acpi\ error
lshw -numeric -class video
lspci -k | grep -iEA5 'vga|3d|display'
lspci -vvn | grep -i VGA
lspci -vvnn
xrandr -q
lspci
inxi -Fxz
lspci -nnk
lsmod
uname -a
dmidecode
cat /proc/cmdline
lsb_release -rd

cat /proc/sys/fs/file-max
grep fs.file /etc/sysctl.conf
ulimit -a

# https://wiki.ubuntuusers.de/Bootoptionen/

sudo x86_energy_perf_policy -v normal
sudo x86_energy_perf_policy -v performance
sudo x86_energy_perf_policy -v balance-performance

cat /proc/cpuinfo | grep -i mhz
cat /proc/cpuinfo | grep "model name"
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor


VALUE STRING        EPB  EPP
performance         0    0
balance-performance 4    128
normal, default     6    128
balance-power       8    192
power               15   255


sudo ubuntu-drivers autoinstall
sudo reboot
systemctl poweroff --force
sudo shutdown now -P


lsmod | grep acpi
sudo modprobe thinkpad_acpi
sudo modprobe -rfv rt5390sta
sudo modprobe -v rt2800pci
sudo update-initramfs -u -t

# HIDE error msgs during boot, still exists in dmesg results.
sudo bash -c "echo ‘kernel.printk = 3 3 3 3’ > /etc/sysctl.d/20-quiet-printk.conf’"


sudo gedit /etc/default/grub
"quiet splash nolapic"
sudo update-grub


sudo nano /etc/default/grub
GRUB_CMDLINE_LINUX_DEFAULT="quiet loglevel=3"
#GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"
sudo grub-mkconfig -o /boot/grub/grub.cfg


cd /etc/default
sudo vi grub
GRUB_CMDLINE_LINUX_DEFAULT=“quiet splash pci=noacpi”
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash acpi_osi=Linux acpi_backlight=vendor"
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash acpi=off"
sudo update-grub


sudo apt install acpi
acpi -i
acpi=off # allows the system to boot, try to isolate the ACPI issue

################################################################################
#
#   systemd-analyze
#
################################################################################

systemd-analyze
systemd-analyze blame
systemd-analyze blame | grep dev-loop
systemd-analyze blame --no-pager|grep dev-loop
systemd-analyze critical-chain
systemd-analyze critical-chain ntp.service networking.service

systemd-analyze plot > boot_analysis.svg
xviewer boot_analysis.svg

systemd-analyze time -H tecmint@192.168.56.5
systemd-analyze blame -H tecmint@192.168.56.5
systemd-analyze critical-chain -H tecmint@192.168.56.5

# https://www.freedesktop.org/software/systemd/man/systemd-analyze.html
# https://www.tecmint.com/systemd-analyze-monitor-linux-bootup-performance/

snap list
mount | grep snapd
# sudo apt-get purge snapd

dmesg --level=err
dmesg --level=warn

sudo apt-get update && sudo apt-get install -y --no-install-recommends
sudo apt-get update && sudo apt-get upgrade -y
sudo update-initramfs -u

sudo apt-cache search kwallet | grep pam
sudo apt-get install libpam-kwallet4 libpam-kwallet5
sudo service lightdm restart

sudo apt-get purge kwalletmanager
sudo apt-get install kwalletmanager

sudo pam-auth-update
sudo pam-auth-update --force
# Make no changes and select "Ok" to update the config
sudo service lightdm restart

sudo dpkg --configure -a
sudo apt-get -f install

sudo service lightdm restart

systemctl status display-manager.service

sudo nano /etc/pam.d/lightdm
# remove nopasswdlogin from this line:
auth    sufficient      pam_succeed_if.so user ingroup nopasswdlogin

--------------------------------------------------------------------------------------
http://manpages.ubuntu.com/manpages/focal/de/man1/systemd-analyze.1.html
https://manpages.debian.org/testing/systemd/systemd-analyze.1.en.html
https://www.freedesktop.org/software/systemd/man/systemd-analyze.html
https://wiki.archlinux.org/index.php/systemd
http://www.linuxfromscratch.org/lfs/view/8.2-systemd/chapter06/systemd.html
https://helpful.knobs-dials.com/index.php/Systemd_notes
https://github.com/systemd/systemd/blob/master/NEWS
https://www.freedesktop.org/software/systemd/man/systemctl.html
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/managing-services-with-systemd_configuring-basic-system-settings
--------------------------------------------------------------------------------------

systemctl list-dependencies --reverse plymouth-quit-wait.service
systemctl list-dependencies plymouth-quit-wait.service
systemctl disable plymouth-quit-wait.service

systemd-analyze blame
systemd-analyze critical-chain
systemd-analyze --user dump
journalctl -u unitname

systemd-analyze plot > ~/bootup.svg
systemd-analyze dot 'avahi-daemon.*' | dot -Tsvg >avahi.svg
eog avahi.svg

systemd-analyze unit-paths | grep '^/run'
systemd-analyze cat-config systemd/logind.conf
systemd-analyze security --no-pager systemd-logind.service

systemctl status
systemctl list-units
systemctl --failed
systemctl --state=failed
systemctl list-unit-files

systemctl status unitname
systemctl start unitname
systemctl stop unitname
systemctl restart unitname
systemctl reload unitname
systemctl enable --now unitname
systemctl disable unitname

systemctl reboot
systemctl poweroff

systemd-analyze
systemctl list-unit-files
systemctl list-unit-files | grep enabled
systemctl | grep running
systemctl list-unit-files --state=enabled
systemctl list-units --type service --state running,failed
systemctl list-jobs
systemd-analyze blame

systemctl status /dev/sda
systemctl status /home
