
------------------------------------------
Setting Up Caching Smarty
------------------------------------------
https://www.smarty.net/docs/en/caching.tpl
https://www.smarty.net/docsv2/en/caching.tpl
https://www.smarty.net/docsv2/de/caching.tpl
https://www.smarty.net/docs/en/caching.tpl


require('Smarty.class.php');
$smarty = new Smarty;
//$smarty->setCaching(Smarty::CACHING_LIFETIME_CURRENT);
$smarty->caching = 1;
$smarty->compile_check = true;
$smarty->display('index.tpl');



require('Smarty.class.php');
$smarty = new Smarty;
$smarty->caching = 2; // lifetime is per cache
// set the cache_lifetime for index.tpl to 5 minutes
$smarty->cache_lifetime = 300;
$smarty->display('index.tpl');
// set the cache_lifetime for home.tpl to 1 hour
$smarty->cache_lifetime = 3600;
$smarty->display('home.tpl');
$smarty->cache_lifetime = 30; // 30 seconds
$smarty->display('home.tpl');



# Example 15.2. Setting $cache_lifetime per cache

require('Smarty.class.php');
$smarty = new Smarty;

// retain current cache lifetime for each specific display call
$smarty->setCaching(Smarty::CACHING_LIFETIME_SAVED);

// set the cache_lifetime for index.tpl to 5 minutes
$smarty->setCacheLifetime(300);
$smarty->display('index.tpl');

// set the cache_lifetime for home.tpl to 1 hour
$smarty->setCacheLifetime(3600);
$smarty->display('home.tpl');

// NOTE: the following $cache_lifetime setting will not work when $caching
// is set to Smarty::CACHING_LIFETIME_SAVED.
// The cache lifetime for home.tpl has already been set
// to 1 hour, and will no longer respect the value of $cache_lifetime.
// The home.tpl cache will still expire after 1 hour.
$smarty->setCacheLifetime(30); // 30 seconds
$smarty->display('home.tpl');






------------------------------------------
how long it took to generate the page
------------------------------------------
https://www.smarty.net/forums/viewtopic.php?p=5750
https://www.smarty.net/forums/viewtopic.php?p=49589


class util {
	function timer($mode='begin', $msg='')	{
		global $_timer_blocks, $_timer_history;
		switch ($mode) {
			case 'begin':
				$_timer_blocks[] =array(microtime(), $msg);
			break;

			case 'end':
				$last = array_pop($_timer_blocks);
				$_start = $last[0];
				$_msg = $last[1];
				list($a_micro, $a_int) = explode(' ', $_start);
				list($b_micro, $b_int) = explode(' ', microtime());
				$elapsed = ($b_int - $a_int) + ($b_micro - $a_micro);
				$_timer_history[] = array($elapsed, $_msg, "$_msg [".round($elapsed, 4)."s ".(round(1/$elapsed, 2))."/s]");
				if ($msg) {
					return "$_msg: {$elapsed}s \n";
				}
				return $elapsed;
			break;

			case 'list':
				$o = '';
				foreach ($_timer_history as $mark) {
					$o .= $mark[2] . " \n";
				}
				return $o;
			break;

			case 'stop':
				$result = '';
				while(!empty($_timer_blocks)) {
					$result .= util::timer('end', $msg);
				}
				return $result;
			break;
		}
	}
}

class SmartyExample extends Smarty {
	function SmartyExample()
	{
		// the following registers the static class method util::timer() as the "timer" modifier
		$class = 'util';
		$this->register_modifier('timer', array($class, 'timer'));
		// setup smarty as fits your needs...
		$this->Smarty();
	}
}


util::timer('begin', 'Page'); // starts a timer block with the message 'Page'
include_once 'SmartyExample.class.php';
$smarty = new SmartyExample();
// ... your app work goes here
$smarty->display('example.tpl'); // this template discharges the timer
echo 'history: '.util::timer('list'); // returns a history of timed block results




------------------------------------------
get current URL using smarty
------------------------------------------
{$smarty.server.HTTP_HOST}{$smarty.server.REQUEST_URI}

{if $smarty.server.HTTP_HOST == "example.com"} do something {/fi}


------------------------------------------
set cookie in smarty template
------------------------------------------

{$smarty.cookies|print_r}
{if isset($smarty.get.sometab) || $smarty.cookies.sometab eq "true"}
    {setcookie("sometab", "true")|substr:0:0} <!-- hide output with substr -->
{else}
	<a class="btn btn-info btn-xs" href="{$smarty.server.REQUEST_URI}&sometab=true">Show Some Tab</a>
{/if}

<a class="btn btn-info" href="{$smarty.server.REQUEST_URI}&sometab=false" onclick="deleteCookieLS();">hide</a>
<script type="text/javascript">
function deleteCookieLS(){
		document.cookie = 'tabs_packingslip' + '=; expires=Thu, 01-Jan-70 00:00:01 GMT;';
	}
</script>



------------------------------------------
smarty continue
https://www.smarty.net/docs/en/language.function.foreach.tpl
------------------------------------------

<ul>
{foreach $myColors as $color}
    {if $color eq "red"} {continue} {/if}
    <li>{$color}</li>
{/foreach}
</ul>

------------------------------------------
smarty substr
------------------------------------------
{$mystring|substr:5:10}
{$mystring|substr:5}


------------------------------------------
[$smarty.capture]
------------------------------------------
https://www.smarty.net/docs/en/language.function.capture.tpl
https://www.smarty.net/docsv2/de/language.variables.smarty.tpl
Example 7.21. {capture} with the name attribute
Example 7.22. {capture} into a template variable

{assign var='Code' value="{'<p class="'}{$VAR}{'"></i>'}"}
{capture assign="Code"}<p class="{$VAR}"></i>{/capture}
<pre><code class="language-html">{$Code|htmlspecialchars}</code></pre>


------------------------------------------
[avoid smarty error after prettify code]

FATAL ERROR: Uncaught --> Smarty Compiler: Syntax error in template ...
- Unexpected ".", expected one of: "}" <-- thrown
------------------------------------------

1. Use {literal}
2. Add comment between wrapper and params $('.some_id').some_function({ /* */ size: 80});


------------------------------------------
component usage
------------------------------------------
v1
{include file="components/PageComponent/page.sidebar.tpl"}
v2
{component class="PageComponent" name="PageComponent" template="sidebar"}




##############################################
#
#   smarty assign innerHTML
#
##############################################

https://www.smarty.net/forums/viewtopic.php?p=53441
https://www.smarty.net/forums/viewtopic.php?p=50727&sid=b052951fbe3a92d8136d10036c3848cd
https://www.smarty.net/forums/viewtopic.php?p=89561&sid=e9d81cba5001fb567cb70ab12c0b0fde
https://www.smarty.net/forums/viewtopic.php?t=11201
https://www.smarty.net/forums/viewtopic.php?p=86003&sid=26bee2847b0bdee9def6b0549abe47fe
https://www.smarty.net/forums/viewtopic.php?t=18712&sid=4cdf52c6da4efe8424d8358b8dc2d1d6
https://www.smarty.net/docsv2/de/api.fetch.tpl
https://www.smarty.net/docs/en/api.fetch.tpl

var product_options = <{$products|@json_encode}>

function displayTaxRanking(){
   //Inhalts Div
   $html = "Test content";
   if(isset($smarty)) $html .= "Smarty available";
   $objResponse = new xajaxResponse();
   $objResponse->addAssign("right_td","innerHTML",$html);
   return $objResponse;
}

---

function forgot()
{
	// register the validator
	SmartyValidate::connect($smarty, true);
	SmartyValidate::register_validator('email', 'email', 'isEmail', false, false, 'trim');
	// show the forgot password form
	global $smarty;
	$objResponse = new xajaxResponse();
	$content = $smarty->fetch('forgot.tpl');
	$objResponse->addClear("mainnav","innerHTML");
	$objResponse->addClear("bottom","innerHTML");
	$objResponse->addAssign("body","innerHTML", $content);
	return $objResponse;
}

$smarty->setTemplateDir("/path/to/styles/templates");
$smarty->setCompileDir("/path/to/styles/templates_c");
$smarty->setCacheDir("/path/to/styles/cache");
$smarty->setConfigDir("/path/to/styles/configs");

##############################################
#
#	xajaxResponse onload
#
##############################################

https://www.smarty.net/forums/viewtopic.php?t=6098&sid=70f0c4f5d4bc848e7c1e07989558f76e
https://www.smarty.net/forums/viewtopic.php?t=7822&sid=512e09a0287a41c02e77e15216cb7884
https://www.smarty.net/docsv2/de/language.function.include.tpl

---------------------
some template
---------------------
<script>
	$(function () {
		setTimeout(function () {
			xajax_SomeComponent_xSomeFunction();
		}, 1500);
	});
</script>


---------------------
SomeComponent.php
---------------------

class SomeComponent{
	public function reload(){
		$this->registerAjaxMethods(  array(  'xSomeFunction'  ) );
	}

	public function xSomeFunction() {
	  $responseObj = new xajaxResponse();
	  $objSmarty = new Smarty();
	  $strHTML     = $objSmarty->fetch(DIR_FS_COMPONENTS . __CLASS__. '/SomeComponent.page.tpl');
	  $responseObj->assign('id_resopnse', 'innerHTML', $strHTML);
	  return $responseObj;
	}
}

---------------------
Component.page.tpl
---------------------
<div class="pull-left col-xs-1">
     {include file="includes/components/SomeComponent/SomeOtherComponent.page.tpl"}
</div>


##############################################
First/Last values for {foreach}
##############################################
https://www.smarty.net/forums/viewtopic.php?p=3219


{foreach name=foo from=$array}
{if $smarty.foreach.foo.first} do something {/if}

{$smarty.foreach.foo|@debug_print_var} // show what else is known for this foreach

{if $smarty.foreach.foo.last}  do something {/if}
{/foreach}


##############################################
Using instanceof in a smarty template
##############################################

{if $item|is_a:'MyObject'}

##############################################
# smarty include file
##############################################
https://www.smarty.net/docsv2/de/language.function.include.tpl

{include file='page_header.tpl'}
{include file='./page_header.tpl'}
{include file='/usr/local/include/templates/header.tpl'}